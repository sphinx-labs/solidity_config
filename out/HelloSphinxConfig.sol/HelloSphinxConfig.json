{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum Network",
          "name": "_network",
          "type": "uint8"
        }
      ],
      "name": "deploy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Network",
          "name": "_network",
          "type": "uint8"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052739fd58bf0f2e6125ffb0cbfa9ae91893dbc1d5c516080523480156200002957600080fd5b506040516200003890620002bf565b604051809103906000f08015801562000055573d6000803e3d6000fd5b50600580546001600160a01b039283166001600160a01b03199182161790915560805160008054600181810183557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563909101805493909516928416831790945560028054808601825591527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054909216179055805560408051808201909152600681526576302e322e3360d01b602082015260039062000118908262000447565b50600554604051634698a9ef60e01b81526001600160a01b0390911690634698a9ef9062000152906000906001906002906004016200054c565b600060405180830381865afa15801562000170573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200019a919081019062000597565b8051620001b091600491602090910190620002cd565b506006602081905260017f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f85560387fc5069e24aaadb2addc3e52e868fcf3f4f8acf5a87e24300992fd4540c2a87eed5561a86a7fbfd358e93f18da3ed276c3afdbdba00b8f0b6008a03476a6a86bd6320ee6938b5560897f75f96ab15d697e93042dc45b5c896c4b27e89bb6eaf39475c5c371cb2513f7d25561a4b17f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2955600a7f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a315560005260fa7f697b2bd7bb2984c4e0dc14c79c987d37818484a62958b9c45a0e8b962f20650f5562000669565b611f57806200123a83390190565b82805482825590600052602060002090601f01602090048101928215620003795791602002820160005b838211156200034857835183826101000a81548160ff0219169083600681111562000326576200032662000513565b02179055509260200192600101602081600001049283019260010302620002f7565b8015620003775782816101000a81549060ff021916905560010160208160000104928301926001030262000348565b505b50620003879291506200038b565b5090565b5b808211156200038757600081556001016200038c565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620003cd57607f821691505b602082108103620003ee57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200044257600081815260208120601f850160051c810160208610156200041d5750805b601f850160051c820191505b818110156200043e5782815560010162000429565b5050505b505050565b81516001600160401b03811115620004635762000463620003a2565b6200047b81620004748454620003b8565b84620003f4565b602080601f831160018114620004b357600084156200049a5750858301515b600019600386901b1c1916600185901b1785556200043e565b600085815260208120601f198616915b82811015620004e457888601518255948401946001909101908401620004c3565b5085821015620005035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b600781106200054857634e487b7160e01b600052602160045260246000fd5b9052565b606081016200055c828662000529565b6200056b602083018562000529565b6200057a604083018462000529565b949350505050565b8051600781106200059257600080fd5b919050565b60006020808385031215620005ab57600080fd5b82516001600160401b0380821115620005c357600080fd5b818501915085601f830112620005d857600080fd5b815181811115620005ed57620005ed620003a2565b8060051b604051601f19603f83011681018181108582111715620006155762000615620003a2565b6040529182528482019250838101850191888311156200063457600080fd5b938501935b828510156200065d576200064d8562000582565b8452938501939285019262000639565b98975050505050505050565b608051610bb86200068260003960005050610bb86000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063506ef1f01461003b578063b17a98fe14610050575b600080fd5b61004e61004936600461027b565b610061565b005b61004e61005e36600461027b565b50565b600154604051600091829182919061007890610261565b61008392919061029f565b604051809103906000f08015801561009f573d6000803e3d6000fd5b50600554604051638a21e63960e01b81529192506000916001600160a01b0390911690638a21e639906100d6908490600401610330565b600060405180830381865afa1580156100f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261011b919081019061036a565b90506000826001600160a01b031663111bac1860066000886006811115610144576101446102f8565b6006811115610155576101556102f8565b815260200190815260200160002054600060405180606001604052808981526020018781526020016040518060400160405280600b81526020016a090cad8d8dea6e0d0d2dcf60ab1b8152508152506040518463ffffffff1660e01b81526004016101c29392919061042f565b6020604051808303816000875af11580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020591906104f6565b9050806001600160a01b031663d09de08a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561024257600080fd5b505af1158015610256573d6000803e3d6000fd5b505050505050505050565b6106638061052083390190565b6007811061005e57600080fd5b60006020828403121561028d57600080fd5b81356102988161026e565b9392505050565b6000604082016040835280855480835260608501915086600052602092508260002060005b828110156102e95781546001600160a01b0316845292840192600191820191016102c4565b50505092019290925292915050565b634e487b7160e01b600052602160045260246000fd5b6007811061032c57634e487b7160e01b600052602160045260246000fd5b9052565b6020810161033e828461030e565b92915050565b634e487b7160e01b600052604160045260246000fd5b80516103658161026e565b919050565b6000602080838503121561037d57600080fd5b825167ffffffffffffffff8082111561039557600080fd5b818501915085601f8301126103a957600080fd5b8151818111156103bb576103bb610344565b8060051b604051601f19603f830116810181811085821117156103e0576103e0610344565b6040529182528482019250838101850191888311156103fe57600080fd5b938501935b82851015610423576104148561035a565b84529385019392850192610403565b98975050505050505050565b8381526000602060018060a01b038516818401526060604084015260c0830184516060850152818501516060608086015281815180845260e0870191508483019350600092505b8083101561049d5761048982855161030e565b928401926001929092019190840190610476565b5060408701519250605f198682030160a08701528251915081815260005b828110156104d65783810185015182820186015284016104bb565b506000818301850152601f909101601f1916019091019695505050505050565b60006020828403121561050857600080fd5b81516001600160a01b038116811461029857600080fdfe608060405234801561001057600080fd5b5060405161066338038061066383398101604081905261002f916100f8565b815161004290600090602085019061004c565b50600155506101c4565b8280548282559060005260206000209081019282156100a1579160200282015b828111156100a157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061006c565b506100ad9291506100b1565b5090565b5b808211156100ad57600081556001016100b2565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146100f357600080fd5b919050565b6000806040838503121561010b57600080fd5b82516001600160401b038082111561012257600080fd5b818501915085601f83011261013657600080fd5b815160208282111561014a5761014a6100c6565b8160051b604051601f19603f8301168101818110868211171561016f5761016f6100c6565b60405292835281830193508481018201928984111561018d57600080fd5b948201945b838610156101b2576101a3866100dc565b85529482019493820193610192565b97909101519698969750505050505050565b610490806101d36000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063111bac181461003b57806353a62da31461006a575b600080fd5b61004e610049366004610210565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e61007836600461033c565b6100c7565b600080600090507f6ecc76f2bfa119090aba7a488f4911b5291c241ac20ab428572372b6aac988008585856040516100b7939291906103ae565b60405180910390a1949350505050565b604080518381526001600160a01b038316602082015260009182917fb392f5c368ea53467e5fcaccadb981abb7a39637bb32e3ed2b447703f4ac6dc7910160405180910390a19392505050565b80356001600160a01b038116811461012b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561016957610169610130565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561019857610198610130565b604052919050565b600082601f8301126101b157600080fd5b813567ffffffffffffffff8111156101cb576101cb610130565b6101de601f8201601f191660200161016f565b8181528460208386010111156101f357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561022557600080fd5b833592506020610236818601610114565b9250604085013567ffffffffffffffff8082111561025357600080fd5b908601906060828903121561026757600080fd5b61026f610146565b82358152838301358281111561028457600080fd5b8301601f81018a1361029557600080fd5b8035838111156102a7576102a7610130565b8060051b6102b687820161016f565b918252828101870191878101908d8411156102d057600080fd5b938801935b838510156102ff5784359250600783106102ef5760008081fd5b82825293880193908801906102d5565b80898701525050505050604083013593508184111561031d57600080fd5b610329898585016101a0565b6040820152809450505050509250925092565b6000806040838503121561034f57600080fd5b8235915061035f60208401610114565b90509250929050565b6000815180845260005b8181101561038e57602081850181015186830182015201610372565b506000602082860101526020601f19601f83011685010191505092915050565b8381526000602060018060a01b038516818401526060604084015260c0830184516060850152818501516060608086015281815180845260e087019150848301935060009250825b8181101561042e5784516007811061041c57634e487b7160e01b85526021600452602485fd5b835293850193918501916001016103f6565b50506040870151868203605f190160a0880152935061044d8185610368565b999850505050505050505056fea2646970667358221220baa9a5883e0929028988a1ff9dbc7522b3ab3e0fd1354de31e0b714cbf8b5b4b64736f6c63430008140033a2646970667358221220d36f2571abb84fb90c0330c5c65fd1d559bd96b391cadb9eda1aeafc0fd0e4e164736f6c63430008140033608060405234801561001057600080fd5b50611f37806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806384ac1f551161007157806384ac1f55146101415780638a21e6391461015457806398b30823146101675780639eb993461461017a578063a1a293311461018d578063e91d3a29146101a057600080fd5b806332f4a348146100b957806338035d30146100e25780634698a9ef146100f55780634d0ec37714610108578063678028661461011b5780637803cd361461012e575b600080fd5b6100cc6100c7366004611887565b6101b3565b6040516100d99190611969565b60405180910390f35b6100cc6100f03660046119cb565b6104cf565b6100cc6101033660046119fe565b61057c565b6100cc610116366004611a41565b610670565b6100cc610129366004611ac7565b610878565b6100cc61013c366004611ba3565b610bd9565b6100cc61014f366004611c17565b610d9c565b6100cc610162366004611c7c565b610f1a565b6100cc610175366004611c9e565b610f84565b6100cc610188366004611d35565b6111d1565b6100cc61019b366004611ddd565b611463565b6100cc6101ae366004611e31565b61159c565b604080516003808252608082019092526060916020820183803683370190505090508b816000815181106101e9576101e9611eeb565b6020026020010190600681111561020257610202611953565b9081600681111561021557610215611953565b815250508a8160018151811061022d5761022d611eeb565b6020026020010190600681111561024657610246611953565b9081600681111561025957610259611953565b81525050898160028151811061027157610271611eeb565b6020026020010190600681111561028a5761028a611953565b9081600681111561029d5761029d611953565b8152505088816003815181106102b5576102b5611eeb565b602002602001019060068111156102ce576102ce611953565b908160068111156102e1576102e1611953565b8152505087816004815181106102f9576102f9611eeb565b6020026020010190600681111561031257610312611953565b9081600681111561032557610325611953565b81525050868160058151811061033d5761033d611eeb565b6020026020010190600681111561035657610356611953565b9081600681111561036957610369611953565b81525050858160068151811061038157610381611eeb565b6020026020010190600681111561039a5761039a611953565b908160068111156103ad576103ad611953565b8152505084816007815181106103c5576103c5611eeb565b602002602001019060068111156103de576103de611953565b908160068111156103f1576103f1611953565b81525050838160088151811061040957610409611eeb565b6020026020010190600681111561042257610422611953565b9081600681111561043557610435611953565b81525050828160098151811061044d5761044d611eeb565b6020026020010190600681111561046657610466611953565b9081600681111561047957610479611953565b815250508181600a8151811061049157610491611eeb565b602002602001019060068111156104aa576104aa611953565b908160068111156104bd576104bd611953565b9052509b9a5050505050505050505050565b6040805160028082526060808301845292602083019080368337019050509050828160008151811061050357610503611eeb565b6020026020010190600681111561051c5761051c611953565b9081600681111561052f5761052f611953565b81525050818160018151811061054757610547611eeb565b6020026020010190600681111561056057610560611953565b9081600681111561057357610573611953565b90525092915050565b6040805160038082526080820190925260609160208201838036833701905050905083816000815181106105b2576105b2611eeb565b602002602001019060068111156105cb576105cb611953565b908160068111156105de576105de611953565b8152505082816001815181106105f6576105f6611eeb565b6020026020010190600681111561060f5761060f611953565b9081600681111561062257610622611953565b81525050818160028151811061063a5761063a611eeb565b6020026020010190600681111561065357610653611953565b9081600681111561066657610666611953565b9052509392505050565b6040805160038082526080820190925260609160208201838036833701905050905087816000815181106106a6576106a6611eeb565b602002602001019060068111156106bf576106bf611953565b908160068111156106d2576106d2611953565b8152505086816001815181106106ea576106ea611eeb565b6020026020010190600681111561070357610703611953565b9081600681111561071657610716611953565b81525050858160028151811061072e5761072e611eeb565b6020026020010190600681111561074757610747611953565b9081600681111561075a5761075a611953565b81525050848160038151811061077257610772611eeb565b6020026020010190600681111561078b5761078b611953565b9081600681111561079e5761079e611953565b8152505083816004815181106107b6576107b6611eeb565b602002602001019060068111156107cf576107cf611953565b908160068111156107e2576107e2611953565b8152505082816005815181106107fa576107fa611eeb565b6020026020010190600681111561081357610813611953565b9081600681111561082657610826611953565b81525050818160068151811061083e5761083e611eeb565b6020026020010190600681111561085757610857611953565b9081600681111561086a5761086a611953565b905250979650505050505050565b604080516003808252608082019092526060916020820183803683370190505090508c816000815181106108ae576108ae611eeb565b602002602001019060068111156108c7576108c7611953565b908160068111156108da576108da611953565b815250508b816001815181106108f2576108f2611eeb565b6020026020010190600681111561090b5761090b611953565b9081600681111561091e5761091e611953565b815250508a8160028151811061093657610936611eeb565b6020026020010190600681111561094f5761094f611953565b9081600681111561096257610962611953565b81525050898160038151811061097a5761097a611eeb565b6020026020010190600681111561099357610993611953565b908160068111156109a6576109a6611953565b8152505088816004815181106109be576109be611eeb565b602002602001019060068111156109d7576109d7611953565b908160068111156109ea576109ea611953565b815250508781600581518110610a0257610a02611eeb565b60200260200101906006811115610a1b57610a1b611953565b90816006811115610a2e57610a2e611953565b815250508681600681518110610a4657610a46611eeb565b60200260200101906006811115610a5f57610a5f611953565b90816006811115610a7257610a72611953565b815250508581600781518110610a8a57610a8a611eeb565b60200260200101906006811115610aa357610aa3611953565b90816006811115610ab657610ab6611953565b815250508481600881518110610ace57610ace611eeb565b60200260200101906006811115610ae757610ae7611953565b90816006811115610afa57610afa611953565b815250508381600981518110610b1257610b12611eeb565b60200260200101906006811115610b2b57610b2b611953565b90816006811115610b3e57610b3e611953565b815250508281600a81518110610b5657610b56611eeb565b60200260200101906006811115610b6f57610b6f611953565b90816006811115610b8257610b82611953565b815250508181600b81518110610b9a57610b9a611eeb565b60200260200101906006811115610bb357610bb3611953565b90816006811115610bc657610bc6611953565b9052509c9b505050505050505050505050565b604080516003808252608082019092526060916020820183803683370190505090508681600081518110610c0f57610c0f611eeb565b60200260200101906006811115610c2857610c28611953565b90816006811115610c3b57610c3b611953565b815250508581600181518110610c5357610c53611eeb565b60200260200101906006811115610c6c57610c6c611953565b90816006811115610c7f57610c7f611953565b815250508481600281518110610c9757610c97611eeb565b60200260200101906006811115610cb057610cb0611953565b90816006811115610cc357610cc3611953565b815250508381600381518110610cdb57610cdb611eeb565b60200260200101906006811115610cf457610cf4611953565b90816006811115610d0757610d07611953565b815250508281600481518110610d1f57610d1f611eeb565b60200260200101906006811115610d3857610d38611953565b90816006811115610d4b57610d4b611953565b815250508181600581518110610d6357610d63611eeb565b60200260200101906006811115610d7c57610d7c611953565b90816006811115610d8f57610d8f611953565b9052509695505050505050565b604080516003808252608082019092526060916020820183803683370190505090508581600081518110610dd257610dd2611eeb565b60200260200101906006811115610deb57610deb611953565b90816006811115610dfe57610dfe611953565b815250508481600181518110610e1657610e16611eeb565b60200260200101906006811115610e2f57610e2f611953565b90816006811115610e4257610e42611953565b815250508381600281518110610e5a57610e5a611eeb565b60200260200101906006811115610e7357610e73611953565b90816006811115610e8657610e86611953565b815250508281600381518110610e9e57610e9e611eeb565b60200260200101906006811115610eb757610eb7611953565b90816006811115610eca57610eca611953565b815250508181600481518110610ee257610ee2611eeb565b60200260200101906006811115610efb57610efb611953565b90816006811115610f0e57610f0e611953565b90525095945050505050565b604080516001808252818301909252606091602080830190803683370190505090508181600081518110610f5057610f50611eeb565b60200260200101906006811115610f6957610f69611953565b90816006811115610f7c57610f7c611953565b905250919050565b604080516003808252608082019092526060916020820183803683370190505090508881600081518110610fba57610fba611eeb565b60200260200101906006811115610fd357610fd3611953565b90816006811115610fe657610fe6611953565b815250508781600181518110610ffe57610ffe611eeb565b6020026020010190600681111561101757611017611953565b9081600681111561102a5761102a611953565b81525050868160028151811061104257611042611eeb565b6020026020010190600681111561105b5761105b611953565b9081600681111561106e5761106e611953565b81525050858160038151811061108657611086611eeb565b6020026020010190600681111561109f5761109f611953565b908160068111156110b2576110b2611953565b8152505084816004815181106110ca576110ca611eeb565b602002602001019060068111156110e3576110e3611953565b908160068111156110f6576110f6611953565b81525050838160058151811061110e5761110e611eeb565b6020026020010190600681111561112757611127611953565b9081600681111561113a5761113a611953565b81525050828160068151811061115257611152611eeb565b6020026020010190600681111561116b5761116b611953565b9081600681111561117e5761117e611953565b81525050818160078151811061119657611196611eeb565b602002602001019060068111156111af576111af611953565b908160068111156111c2576111c2611953565b90525098975050505050505050565b60408051600380825260808201909252606091602082018380368337019050509050898160008151811061120757611207611eeb565b6020026020010190600681111561122057611220611953565b9081600681111561123357611233611953565b81525050888160018151811061124b5761124b611eeb565b6020026020010190600681111561126457611264611953565b9081600681111561127757611277611953565b81525050878160028151811061128f5761128f611eeb565b602002602001019060068111156112a8576112a8611953565b908160068111156112bb576112bb611953565b8152505086816003815181106112d3576112d3611eeb565b602002602001019060068111156112ec576112ec611953565b908160068111156112ff576112ff611953565b81525050858160048151811061131757611317611eeb565b6020026020010190600681111561133057611330611953565b9081600681111561134357611343611953565b81525050848160058151811061135b5761135b611eeb565b6020026020010190600681111561137457611374611953565b9081600681111561138757611387611953565b81525050838160068151811061139f5761139f611eeb565b602002602001019060068111156113b8576113b8611953565b908160068111156113cb576113cb611953565b8152505082816007815181106113e3576113e3611eeb565b602002602001019060068111156113fc576113fc611953565b9081600681111561140f5761140f611953565b81525050818160088151811061142757611427611eeb565b6020026020010190600681111561144057611440611953565b9081600681111561145357611453611953565b9052509998505050505050505050565b60408051600380825260808201909252606091602082018380368337019050509050848160008151811061149957611499611eeb565b602002602001019060068111156114b2576114b2611953565b908160068111156114c5576114c5611953565b8152505083816001815181106114dd576114dd611eeb565b602002602001019060068111156114f6576114f6611953565b9081600681111561150957611509611953565b81525050828160028151811061152157611521611eeb565b6020026020010190600681111561153a5761153a611953565b9081600681111561154d5761154d611953565b81525050818160038151811061156557611565611eeb565b6020026020010190600681111561157e5761157e611953565b9081600681111561159157611591611953565b905250949350505050565b604080516003808252608082019092526060916020820183803683370190505090508a816000815181106115d2576115d2611eeb565b602002602001019060068111156115eb576115eb611953565b908160068111156115fe576115fe611953565b81525050898160018151811061161657611616611eeb565b6020026020010190600681111561162f5761162f611953565b9081600681111561164257611642611953565b81525050888160028151811061165a5761165a611eeb565b6020026020010190600681111561167357611673611953565b9081600681111561168657611686611953565b81525050878160038151811061169e5761169e611eeb565b602002602001019060068111156116b7576116b7611953565b908160068111156116ca576116ca611953565b8152505086816004815181106116e2576116e2611eeb565b602002602001019060068111156116fb576116fb611953565b9081600681111561170e5761170e611953565b81525050858160058151811061172657611726611eeb565b6020026020010190600681111561173f5761173f611953565b9081600681111561175257611752611953565b81525050848160068151811061176a5761176a611eeb565b6020026020010190600681111561178357611783611953565b9081600681111561179657611796611953565b8152505083816007815181106117ae576117ae611eeb565b602002602001019060068111156117c7576117c7611953565b908160068111156117da576117da611953565b8152505082816008815181106117f2576117f2611eeb565b6020026020010190600681111561180b5761180b611953565b9081600681111561181e5761181e611953565b81525050818160098151811061183657611836611eeb565b6020026020010190600681111561184f5761184f611953565b9081600681111561186257611862611953565b9052509a9950505050505050505050565b80356007811061188257600080fd5b919050565b60008060008060008060008060008060006101608c8e0312156118a957600080fd5b6118b28c611873565b9a506118c060208d01611873565b99506118ce60408d01611873565b98506118dc60608d01611873565b97506118ea60808d01611873565b96506118f860a08d01611873565b955061190660c08d01611873565b945061191460e08d01611873565b93506119236101008d01611873565b92506119326101208d01611873565b91506119416101408d01611873565b90509295989b509295989b9093969950565b634e487b7160e01b600052602160045260246000fd5b602080825282518282018190526000919084820190604085019084805b828110156119be578451600781106119ac57634e487b7160e01b83526021600452602483fd5b84529385019392850192600101611986565b5091979650505050505050565b600080604083850312156119de57600080fd5b6119e783611873565b91506119f560208401611873565b90509250929050565b600080600060608486031215611a1357600080fd5b611a1c84611873565b9250611a2a60208501611873565b9150611a3860408501611873565b90509250925092565b600080600080600080600060e0888a031215611a5c57600080fd5b611a6588611873565b9650611a7360208901611873565b9550611a8160408901611873565b9450611a8f60608901611873565b9350611a9d60808901611873565b9250611aab60a08901611873565b9150611ab960c08901611873565b905092959891949750929550565b6000806000806000806000806000806000806101808d8f031215611aea57600080fd5b611af38d611873565b9b50611b0160208e01611873565b9a50611b0f60408e01611873565b9950611b1d60608e01611873565b9850611b2b60808e01611873565b9750611b3960a08e01611873565b9650611b4760c08e01611873565b9550611b5560e08e01611873565b9450611b646101008e01611873565b9350611b736101208e01611873565b9250611b826101408e01611873565b9150611b916101608e01611873565b90509295989b509295989b509295989b565b60008060008060008060c08789031215611bbc57600080fd5b611bc587611873565b9550611bd360208801611873565b9450611be160408801611873565b9350611bef60608801611873565b9250611bfd60808801611873565b9150611c0b60a08801611873565b90509295509295509295565b600080600080600060a08688031215611c2f57600080fd5b611c3886611873565b9450611c4660208701611873565b9350611c5460408701611873565b9250611c6260608701611873565b9150611c7060808701611873565b90509295509295909350565b600060208284031215611c8e57600080fd5b611c9782611873565b9392505050565b600080600080600080600080610100898b031215611cbb57600080fd5b611cc489611873565b9750611cd260208a01611873565b9650611ce060408a01611873565b9550611cee60608a01611873565b9450611cfc60808a01611873565b9350611d0a60a08a01611873565b9250611d1860c08a01611873565b9150611d2660e08a01611873565b90509295985092959890939650565b60008060008060008060008060006101208a8c031215611d5457600080fd5b611d5d8a611873565b9850611d6b60208b01611873565b9750611d7960408b01611873565b9650611d8760608b01611873565b9550611d9560808b01611873565b9450611da360a08b01611873565b9350611db160c08b01611873565b9250611dbf60e08b01611873565b9150611dce6101008b01611873565b90509295985092959850929598565b60008060008060808587031215611df357600080fd5b611dfc85611873565b9350611e0a60208601611873565b9250611e1860408601611873565b9150611e2660608601611873565b905092959194509250565b6000806000806000806000806000806101408b8d031215611e5157600080fd5b611e5a8b611873565b9950611e6860208c01611873565b9850611e7660408c01611873565b9750611e8460608c01611873565b9650611e9260808c01611873565b9550611ea060a08c01611873565b9450611eae60c08c01611873565b9350611ebc60e08c01611873565b9250611ecb6101008c01611873565b9150611eda6101208c01611873565b90509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220212e001c190caa80de85cdce7cd08ed6535330c720233a518865c592ded94fa864736f6c63430008140033",
    "sourceMap": "371:1470:5:-:0;;;588:42;562:68;;677:551;;;;;;;;;;710:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;702:5:5;:25;;-1:-1:-1;;;;;702:25:5;;;-1:-1:-1;;;;;;702:25:5;;;;;;;749:5;;702;737:18;;702:25;737:18;;;;;;;;;;;;;;;;;;;;;;;765:9;:21;;;;;;;;;;;;;;;;;;;796:13;;819:25;;;;;;;;;;;;-1:-1:-1;;;737:18:5;819:25;;;:14;;:25;;:14;:25;:::i;:::-;-1:-1:-1;865:5:5;;:68;;-1:-1:-1;;;865:68:5;;-1:-1:-1;;;;;865:5:5;;;;:14;;:68;;:5;;;;916:16;;865:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;865:68:5;;;;;;;;;;;;:::i;:::-;854:79;;;;:8;;:79;;;;;;:::i;:::-;-1:-1:-1;944:8:5;:26;;;;973:1;944:26;:30;1008:2;984:21;:26;1050:5;1020:27;:35;1093:3;1065:25;:31;1135:5;1106:26;:34;1179:2;1150:26;:31;-1:-1:-1;1191:24:5;1218:3;1191:24;:30;371:1470;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;371:1470:5;;;-1:-1:-1;371:1470:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:6;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:6;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:6;;;2580:26;2531:89;-1:-1:-1;;1335:1:6;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:6;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:6;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:6;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:6:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:235;2946:1;2939:5;2936:12;2926:143;;2991:10;2986:3;2982:20;2979:1;2972:31;3026:4;3023:1;3016:15;3054:4;3051:1;3044:15;2926:143;3078:18;;2867:235::o;3107:400::-;3327:2;3312:18;;3339:42;3316:9;3363:6;3339:42;:::i;:::-;3390:51;3437:2;3426:9;3422:18;3414:6;3390:51;:::i;:::-;3450;3497:2;3486:9;3482:18;3474:6;3450:51;:::i;:::-;3107:400;;;;;;:::o;3512:152::-;3596:13;;3638:1;3628:12;;3618:40;;3654:1;3651;3644:12;3618:40;3512:152;;;:::o;3669:1146::-;3776:6;3807:2;3850;3838:9;3829:7;3825:23;3821:32;3818:52;;;3866:1;3863;3856:12;3818:52;3893:16;;-1:-1:-1;;;;;3958:14:6;;;3955:34;;;3985:1;3982;3975:12;3955:34;4023:6;4012:9;4008:22;3998:32;;4068:7;4061:4;4057:2;4053:13;4049:27;4039:55;;4090:1;4087;4080:12;4039:55;4119:2;4113:9;4141:2;4137;4134:10;4131:36;;;4147:18;;:::i;:::-;4193:2;4190:1;4186:10;4225:2;4219:9;4288:2;4284:7;4279:2;4275;4271:11;4267:25;4259:6;4255:38;4343:6;4331:10;4328:22;4323:2;4311:10;4308:18;4305:46;4302:72;;;4354:18;;:::i;:::-;4390:2;4383:22;4440:18;;;4474:15;;;;-1:-1:-1;4516:11:6;;;4512:20;;;4544:19;;;4541:39;;;4576:1;4573;4566:12;4541:39;4600:11;;;;4620:164;4636:6;4631:3;4628:15;4620:164;;;4702:39;4737:3;4702:39;:::i;:::-;4690:52;;4653:12;;;;4762;;;;4620:164;;;4803:6;3669:1146;-1:-1:-1;;;;;;;;3669:1146:6:o;:::-;371:1470:5;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063506ef1f01461003b578063b17a98fe14610050575b600080fd5b61004e61004936600461027b565b610061565b005b61004e61005e36600461027b565b50565b600154604051600091829182919061007890610261565b61008392919061029f565b604051809103906000f08015801561009f573d6000803e3d6000fd5b50600554604051638a21e63960e01b81529192506000916001600160a01b0390911690638a21e639906100d6908490600401610330565b600060405180830381865afa1580156100f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261011b919081019061036a565b90506000826001600160a01b031663111bac1860066000886006811115610144576101446102f8565b6006811115610155576101556102f8565b815260200190815260200160002054600060405180606001604052808981526020018781526020016040518060400160405280600b81526020016a090cad8d8dea6e0d0d2dcf60ab1b8152508152506040518463ffffffff1660e01b81526004016101c29392919061042f565b6020604051808303816000875af11580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020591906104f6565b9050806001600160a01b031663d09de08a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561024257600080fd5b505af1158015610256573d6000803e3d6000fd5b505050505050505050565b6106638061052083390190565b6007811061005e57600080fd5b60006020828403121561028d57600080fd5b81356102988161026e565b9392505050565b6000604082016040835280855480835260608501915086600052602092508260002060005b828110156102e95781546001600160a01b0316845292840192600191820191016102c4565b50505092019290925292915050565b634e487b7160e01b600052602160045260246000fd5b6007811061032c57634e487b7160e01b600052602160045260246000fd5b9052565b6020810161033e828461030e565b92915050565b634e487b7160e01b600052604160045260246000fd5b80516103658161026e565b919050565b6000602080838503121561037d57600080fd5b825167ffffffffffffffff8082111561039557600080fd5b818501915085601f8301126103a957600080fd5b8151818111156103bb576103bb610344565b8060051b604051601f19603f830116810181811085821117156103e0576103e0610344565b6040529182528482019250838101850191888311156103fe57600080fd5b938501935b82851015610423576104148561035a565b84529385019392850192610403565b98975050505050505050565b8381526000602060018060a01b038516818401526060604084015260c0830184516060850152818501516060608086015281815180845260e0870191508483019350600092505b8083101561049d5761048982855161030e565b928401926001929092019190840190610476565b5060408701519250605f198682030160a08701528251915081815260005b828110156104d65783810185015182820186015284016104bb565b506000818301850152601f909101601f1916019091019695505050505050565b60006020828403121561050857600080fd5b81516001600160a01b038116811461029857600080fdfe608060405234801561001057600080fd5b5060405161066338038061066383398101604081905261002f916100f8565b815161004290600090602085019061004c565b50600155506101c4565b8280548282559060005260206000209081019282156100a1579160200282015b828111156100a157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061006c565b506100ad9291506100b1565b5090565b5b808211156100ad57600081556001016100b2565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146100f357600080fd5b919050565b6000806040838503121561010b57600080fd5b82516001600160401b038082111561012257600080fd5b818501915085601f83011261013657600080fd5b815160208282111561014a5761014a6100c6565b8160051b604051601f19603f8301168101818110868211171561016f5761016f6100c6565b60405292835281830193508481018201928984111561018d57600080fd5b948201945b838610156101b2576101a3866100dc565b85529482019493820193610192565b97909101519698969750505050505050565b610490806101d36000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063111bac181461003b57806353a62da31461006a575b600080fd5b61004e610049366004610210565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e61007836600461033c565b6100c7565b600080600090507f6ecc76f2bfa119090aba7a488f4911b5291c241ac20ab428572372b6aac988008585856040516100b7939291906103ae565b60405180910390a1949350505050565b604080518381526001600160a01b038316602082015260009182917fb392f5c368ea53467e5fcaccadb981abb7a39637bb32e3ed2b447703f4ac6dc7910160405180910390a19392505050565b80356001600160a01b038116811461012b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561016957610169610130565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561019857610198610130565b604052919050565b600082601f8301126101b157600080fd5b813567ffffffffffffffff8111156101cb576101cb610130565b6101de601f8201601f191660200161016f565b8181528460208386010111156101f357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561022557600080fd5b833592506020610236818601610114565b9250604085013567ffffffffffffffff8082111561025357600080fd5b908601906060828903121561026757600080fd5b61026f610146565b82358152838301358281111561028457600080fd5b8301601f81018a1361029557600080fd5b8035838111156102a7576102a7610130565b8060051b6102b687820161016f565b918252828101870191878101908d8411156102d057600080fd5b938801935b838510156102ff5784359250600783106102ef5760008081fd5b82825293880193908801906102d5565b80898701525050505050604083013593508184111561031d57600080fd5b610329898585016101a0565b6040820152809450505050509250925092565b6000806040838503121561034f57600080fd5b8235915061035f60208401610114565b90509250929050565b6000815180845260005b8181101561038e57602081850181015186830182015201610372565b506000602082860101526020601f19601f83011685010191505092915050565b8381526000602060018060a01b038516818401526060604084015260c0830184516060850152818501516060608086015281815180845260e087019150848301935060009250825b8181101561042e5784516007811061041c57634e487b7160e01b85526021600452602485fd5b835293850193918501916001016103f6565b50506040870151868203605f190160a0880152935061044d8185610368565b999850505050505050505056fea2646970667358221220baa9a5883e0929028988a1ff9dbc7522b3ab3e0fd1354de31e0b714cbf8b5b4b64736f6c63430008140033a2646970667358221220d36f2571abb84fb90c0330c5c65fd1d559bd96b391cadb9eda1aeafc0fd0e4e164736f6c63430008140033",
    "sourceMap": "371:1470:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1289:550;;;;;;:::i;:::-;;:::i;:::-;;1234:49;;;;;;:::i;:::-;;;1289:550;1476:9;;1403:93;;1341:12;;;;;;1476:9;1403:93;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1540:5:5;;:32;;-1:-1:-1;;;1540:32:5;;1381:115;;-1:-1:-1;1507:30:5;;-1:-1:-1;;;;;1540:5:5;;;;:14;;:32;;1507:30;;1540:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1540:32:5;;;;;;;;;;;;:::i;:::-;1507:65;;1582:23;1608:6;-1:-1:-1;;;;;1608:24:5;;1646:8;:18;1655:8;1646:18;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1687:1;1704:84;;;;;;;;1726:4;1704:84;;;;1742:13;1704:84;;;;;;;;;;;;;;;;;-1:-1:-1;;;1704:84:5;;;;;;1608:190;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:216;;1809:11;-1:-1:-1;;;;;1809:21:5;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1330:509;;;;1289:550;:::o;-1:-1:-1:-;;;;;;;;:::o;14:106:6:-;94:1;87:5;84:12;74:40;;110:1;107;100:12;125:264;196:6;249:2;237:9;228:7;224:23;220:32;217:52;;;265:1;262;255:12;217:52;304:9;291:23;323:36;353:5;323:36;:::i;:::-;378:5;125:264;-1:-1:-1;;;125:264:6:o;394:754::-;561:4;609:2;598:9;594:18;639:2;628:9;621:21;662:6;697;691:13;728:6;720;713:22;766:2;755:9;751:18;744:25;;788:6;785:1;778:17;814:4;804:14;;854:2;851:1;841:16;875:1;885:194;899:6;896:1;893:13;885:194;;;964:13;;-1:-1:-1;;;;;960:39:6;948:52;;1020:12;;;;996:1;1055:14;;;;914:9;885:194;;;-1:-1:-1;;;1115:18:6;;1108:34;;;;1096:3;394:754;-1:-1:-1;;394:754:6:o;1153:127::-;1214:10;1209:3;1205:20;1202:1;1195:31;1245:4;1242:1;1235:15;1269:4;1266:1;1259:15;1285:235;1364:1;1357:5;1354:12;1344:143;;1409:10;1404:3;1400:20;1397:1;1390:31;1444:4;1441:1;1434:15;1472:4;1469:1;1462:15;1344:143;1496:18;;1285:235::o;1525:204::-;1669:2;1654:18;;1681:42;1658:9;1705:6;1681:42;:::i;:::-;1525:204;;;;:::o;1734:127::-;1795:10;1790:3;1786:20;1783:1;1776:31;1826:4;1823:1;1816:15;1850:4;1847:1;1840:15;1866:148;1950:13;;1972:36;1950:13;1972:36;:::i;:::-;1866:148;;;:::o;2019:1146::-;2126:6;2157:2;2200;2188:9;2179:7;2175:23;2171:32;2168:52;;;2216:1;2213;2206:12;2168:52;2249:9;2243:16;2278:18;2319:2;2311:6;2308:14;2305:34;;;2335:1;2332;2325:12;2305:34;2373:6;2362:9;2358:22;2348:32;;2418:7;2411:4;2407:2;2403:13;2399:27;2389:55;;2440:1;2437;2430:12;2389:55;2469:2;2463:9;2491:2;2487;2484:10;2481:36;;;2497:18;;:::i;:::-;2543:2;2540:1;2536:10;2575:2;2569:9;2638:2;2634:7;2629:2;2625;2621:11;2617:25;2609:6;2605:38;2693:6;2681:10;2678:22;2673:2;2661:10;2658:18;2655:46;2652:72;;;2704:18;;:::i;:::-;2740:2;2733:22;2790:18;;;2824:15;;;;-1:-1:-1;2866:11:6;;;2862:20;;;2894:19;;;2891:39;;;2926:1;2923;2916:12;2891:39;2950:11;;;;2970:164;2986:6;2981:3;2978:15;2970:164;;;3052:39;3087:3;3052:39;:::i;:::-;3040:52;;3003:12;;;;3112;;;;2970:164;;;3153:6;2019:1146;-1:-1:-1;;;;;;;;2019:1146:6:o;3170:1462::-;3417:6;3406:9;3399:25;3380:4;3443:2;3510:1;3506;3501:3;3497:11;3493:19;3485:6;3481:32;3476:2;3465:9;3461:18;3454:60;3550:2;3545;3534:9;3530:18;3523:30;3591:3;3580:9;3576:19;3637:6;3631:13;3626:2;3615:9;3611:18;3604:41;3692:2;3684:6;3680:15;3674:22;3733:2;3727:3;3716:9;3712:19;3705:31;3756:6;3791:12;3785:19;3828:6;3820;3813:22;3866:3;3855:9;3851:19;3844:26;;3911:2;3897:12;3893:21;3879:35;;3932:1;3923:10;;3942:186;3956:6;3953:1;3950:13;3942:186;;;4005:43;4044:3;4035:6;4029:13;4005:43;:::i;:::-;4103:15;;;;3978:1;3971:9;;;;;4068:12;;;;3942:186;;;3946:3;4177:2;4169:6;4165:15;4159:22;4137:44;;4247:2;4243:7;4231:9;4226:3;4222:19;4218:33;4212:3;4201:9;4197:19;4190:62;4283:14;4277:21;4261:37;;4319:8;4314:3;4307:21;4348:1;4358:154;4374:8;4369:3;4366:17;4358:154;;;4471:24;;;4467:33;;4461:40;4441:13;;;4437:22;;4430:72;4393:12;;4358:154;;;-1:-1:-1;4557:1:6;4532:18;;;4528:27;;4521:38;4616:2;4593:17;;;-1:-1:-1;;4589:31:6;4580:41;4576:50;;;;3170:1462;-1:-1:-1;;;;;;3170:1462:6:o;4637:308::-;4725:6;4778:2;4766:9;4757:7;4753:23;4749:32;4746:52;;;4794:1;4791;4784:12;4746:52;4820:16;;-1:-1:-1;;;;;4865:31:6;;4855:42;;4845:70;;4911:1;4908;4901:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deploy(uint8)": "506ef1f0",
    "setup(uint8)": "b17a98fe"
  },
  "gasEstimates": {
    "creation": {
      "codeDepositCost": "600000",
      "executionCost": "infinite",
      "totalCost": "infinite"
    },
    "external": {
      "deploy(uint8)": "infinite",
      "setup(uint8)": "infinite"
    },
    "internal": {}
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum Network\",\"name\":\"_network\",\"type\":\"uint8\"}],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Network\",\"name\":\"_network\",\"type\":\"uint8\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/config/HelloSphinxConfig.sol\":\"HelloSphinxConfig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@connext/=node_modules/@sphinx-labs/contracts/node_modules/@connext/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@layerzerolabs/=node_modules/@sphinx-labs/plugins/node_modules/@layerzerolabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@sphinx-labs/=node_modules/@sphinx-labs/\",\":@sphinx/=node_modules/@sphinx-labs/plugins/contracts/foundry/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"src/client/HelloSphinx.sol\":{\"keccak256\":\"0xe16f77034811e7b842d4bccae5317c1d2a459794e3c2ca06e6b93c611dd37767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d039c71b9c1300bb7553556bbead308b4567fe0a4a575a7853526d5e9b8ee9\",\"dweb:/ipfs/Qmd5rsepQ6Qe8XBW37bc8VMFGm3xKTm1oH51cGEqzUGP32\"]},\"src/client/SphinxClient.sol\":{\"keccak256\":\"0x778977a28321dbb04825bd99fc54afaaf890ac66ea33fafb2096906834c89ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f57cdcfd36481a01c1f3e6ebdee324802830cebd6f322539de1476ee207340e\",\"dweb:/ipfs/QmVRBbQRaoUZxc5zvCXSoMrA67Cjn3on7hXcyPxqiLuhd3\"]},\"src/client/SphinxConfig.sol\":{\"keccak256\":\"0x10310e5a32b02dec3ec0b5d254c6538715dbf5edf3ba14a2f15d6f6edb0ed17c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d83fa6132494db85abb0f64d8cf9ceb7edcade086dd8b8e830cb6f71b69ddc34\",\"dweb:/ipfs/QmdJY3Es9Ch9mvidTxfEsPXgkTZohUkEYLS24Pe8XBWFsi\"]},\"src/client/SphinxUtils.sol\":{\"keccak256\":\"0x24f27a93033a9bbee8de514bffee1a27cf81691d533936199c99620792b2eac5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45679aa42fca93907884ccc74f776164832582233099ba3a95231ae6897ffed4\",\"dweb:/ipfs/QmS41SqKUikD5cbyEsve9yyQPk7SNZWuBYWf841RfcyF67\"]},\"src/client/types/SphinxClientTypes.sol\":{\"keccak256\":\"0xe07bd5d8a52295ec173d1dbc7cb4a2cec50ebe72a742f14c5d6a9c85ac37046b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0acd2908c62f9b6d41e30e7f175de1be041833c888c4deac08f1b72fb4acfb5c\",\"dweb:/ipfs/QmPNfqa7FATMnGT53t3gwd1ZWRZZRAbxHo3mNKeiwvUrHM\"]},\"src/config/HelloSphinxConfig.sol\":{\"keccak256\":\"0xfa53fec0959c64408ef568242164d8144e1c24b402a8787cd1172dbdece5c3a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a29f96324f7c22e5195af775f3ddc40f0cc5cf82fb503a8853dfe19cd09d4fae\",\"dweb:/ipfs/QmXPvU4MRkbYQZWvgDBMKrHUxBzt4adnzRdV7G9PN6thcs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "enum Network",
              "name": "_network",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploy"
        },
        {
          "inputs": [
            {
              "internalType": "enum Network",
              "name": "_network",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setup"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@connext/=node_modules/@sphinx-labs/contracts/node_modules/@connext/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@layerzerolabs/=node_modules/@sphinx-labs/plugins/node_modules/@layerzerolabs/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@sphinx-labs/=node_modules/@sphinx-labs/",
        "@sphinx/=node_modules/@sphinx-labs/plugins/contracts/foundry/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/config/HelloSphinxConfig.sol": "HelloSphinxConfig"
      },
      "libraries": {}
    },
    "sources": {
      "src/client/HelloSphinx.sol": {
        "keccak256": "0xe16f77034811e7b842d4bccae5317c1d2a459794e3c2ca06e6b93c611dd37767",
        "urls": [
          "bzz-raw://65d039c71b9c1300bb7553556bbead308b4567fe0a4a575a7853526d5e9b8ee9",
          "dweb:/ipfs/Qmd5rsepQ6Qe8XBW37bc8VMFGm3xKTm1oH51cGEqzUGP32"
        ],
        "license": "MIT"
      },
      "src/client/SphinxClient.sol": {
        "keccak256": "0x778977a28321dbb04825bd99fc54afaaf890ac66ea33fafb2096906834c89ad3",
        "urls": [
          "bzz-raw://2f57cdcfd36481a01c1f3e6ebdee324802830cebd6f322539de1476ee207340e",
          "dweb:/ipfs/QmVRBbQRaoUZxc5zvCXSoMrA67Cjn3on7hXcyPxqiLuhd3"
        ],
        "license": "MIT"
      },
      "src/client/SphinxConfig.sol": {
        "keccak256": "0x10310e5a32b02dec3ec0b5d254c6538715dbf5edf3ba14a2f15d6f6edb0ed17c",
        "urls": [
          "bzz-raw://d83fa6132494db85abb0f64d8cf9ceb7edcade086dd8b8e830cb6f71b69ddc34",
          "dweb:/ipfs/QmdJY3Es9Ch9mvidTxfEsPXgkTZohUkEYLS24Pe8XBWFsi"
        ],
        "license": "MIT"
      },
      "src/client/SphinxUtils.sol": {
        "keccak256": "0x24f27a93033a9bbee8de514bffee1a27cf81691d533936199c99620792b2eac5",
        "urls": [
          "bzz-raw://45679aa42fca93907884ccc74f776164832582233099ba3a95231ae6897ffed4",
          "dweb:/ipfs/QmS41SqKUikD5cbyEsve9yyQPk7SNZWuBYWf841RfcyF67"
        ],
        "license": "MIT"
      },
      "src/client/types/SphinxClientTypes.sol": {
        "keccak256": "0xe07bd5d8a52295ec173d1dbc7cb4a2cec50ebe72a742f14c5d6a9c85ac37046b",
        "urls": [
          "bzz-raw://0acd2908c62f9b6d41e30e7f175de1be041833c888c4deac08f1b72fb4acfb5c",
          "dweb:/ipfs/QmPNfqa7FATMnGT53t3gwd1ZWRZZRAbxHo3mNKeiwvUrHM"
        ],
        "license": "MIT"
      },
      "src/config/HelloSphinxConfig.sol": {
        "keccak256": "0xfa53fec0959c64408ef568242164d8144e1c24b402a8787cd1172dbdece5c3a4",
        "urls": [
          "bzz-raw://a29f96324f7c22e5195af775f3ddc40f0cc5cf82fb503a8853dfe19cd09d4fae",
          "dweb:/ipfs/QmXPvU4MRkbYQZWvgDBMKrHUxBzt4adnzRdV7G9PN6thcs"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1141,
        "contract": "src/config/HelloSphinxConfig.sol:HelloSphinxConfig",
        "label": "owners",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1143,
        "contract": "src/config/HelloSphinxConfig.sol:HelloSphinxConfig",
        "label": "threshold",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1146,
        "contract": "src/config/HelloSphinxConfig.sol:HelloSphinxConfig",
        "label": "proposers",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1148,
        "contract": "src/config/HelloSphinxConfig.sol:HelloSphinxConfig",
        "label": "managerVersion",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 1152,
        "contract": "src/config/HelloSphinxConfig.sol:HelloSphinxConfig",
        "label": "networks",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_enum(Network)1109)dyn_storage"
      },
      {
        "astId": 1155,
        "contract": "src/config/HelloSphinxConfig.sol:HelloSphinxConfig",
        "label": "utils",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(SphinxUtils)1099"
      },
      {
        "astId": 1163,
        "contract": "src/config/HelloSphinxConfig.sol:HelloSphinxConfig",
        "label": "chainIds",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_enum(Network)1109,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_enum(Network)1109)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "enum Network[]",
        "numberOfBytes": "32",
        "base": "t_enum(Network)1109"
      },
      "t_contract(SphinxUtils)1099": {
        "encoding": "inplace",
        "label": "contract SphinxUtils",
        "numberOfBytes": "20"
      },
      "t_enum(Network)1109": {
        "encoding": "inplace",
        "label": "enum Network",
        "numberOfBytes": "1"
      },
      "t_mapping(t_enum(Network)1109,t_uint256)": {
        "encoding": "mapping",
        "key": "t_enum(Network)1109",
        "label": "mapping(enum Network => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "ast": {
    "absolutePath": "src/config/HelloSphinxConfig.sol",
    "id": 1323,
    "exportedSymbols": {
      "DeployOptions": [
        1118
      ],
      "HelloSphinx": [
        81
      ],
      "HelloSphinxConfig": [
        1322
      ],
      "Network": [
        1109
      ],
      "SphinxClient": [
        185
      ],
      "SphinxConfig": [
        188
      ],
      "SphinxUtils": [
        1099
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1809:5",
    "nodes": [
      {
        "id": 1125,
        "nodeType": "PragmaDirective",
        "src": "32:24:5",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 1127,
        "nodeType": "ImportDirective",
        "src": "58:58:5",
        "nodes": [],
        "absolutePath": "src/client/SphinxConfig.sol",
        "file": "../client/SphinxConfig.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1323,
        "sourceUnit": 189,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1126,
              "name": "SphinxConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 188,
              "src": "67:12:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1130,
        "nodeType": "ImportDirective",
        "src": "117:79:5",
        "nodes": [],
        "absolutePath": "src/client/types/SphinxClientTypes.sol",
        "file": "../client/types/SphinxClientTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1323,
        "sourceUnit": 1124,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1128,
              "name": "Network",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1109,
              "src": "126:7:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1129,
              "name": "DeployOptions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1118,
              "src": "135:13:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1132,
        "nodeType": "ImportDirective",
        "src": "197:58:5",
        "nodes": [],
        "absolutePath": "src/client/SphinxClient.sol",
        "file": "../client/SphinxClient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1323,
        "sourceUnit": 186,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1131,
              "name": "SphinxClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 185,
              "src": "206:12:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1134,
        "nodeType": "ImportDirective",
        "src": "256:56:5",
        "nodes": [],
        "absolutePath": "src/client/HelloSphinx.sol",
        "file": "../client/HelloSphinx.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1323,
        "sourceUnit": 82,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1133,
              "name": "HelloSphinx",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 81,
              "src": "265:11:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1136,
        "nodeType": "ImportDirective",
        "src": "313:56:5",
        "nodes": [],
        "absolutePath": "src/client/SphinxUtils.sol",
        "file": "../client/SphinxUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1323,
        "sourceUnit": 1100,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1135,
              "name": "SphinxUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1099,
              "src": "322:11:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1322,
        "nodeType": "ContractDefinition",
        "src": "371:1470:5",
        "nodes": [
          {
            "id": 1141,
            "nodeType": "VariableDeclaration",
            "src": "420:16:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owners",
            "nameLocation": "430:6:5",
            "scope": 1322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1139,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "420:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1140,
              "nodeType": "ArrayTypeName",
              "src": "420:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1143,
            "nodeType": "VariableDeclaration",
            "src": "442:14:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "threshold",
            "nameLocation": "447:9:5",
            "scope": 1322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1142,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "442:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1146,
            "nodeType": "VariableDeclaration",
            "src": "462:19:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "proposers",
            "nameLocation": "472:9:5",
            "scope": 1322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1144,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "462:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1145,
              "nodeType": "ArrayTypeName",
              "src": "462:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1148,
            "nodeType": "VariableDeclaration",
            "src": "487:21:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "managerVersion",
            "nameLocation": "494:14:5",
            "scope": 1322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1147,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "487:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1152,
            "nodeType": "VariableDeclaration",
            "src": "514:18:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "networks",
            "nameLocation": "524:8:5",
            "scope": 1322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_enum$_Network_$1109_$dyn_storage",
              "typeString": "enum Network[]"
            },
            "typeName": {
              "baseType": {
                "id": 1150,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1149,
                  "name": "Network",
                  "nameLocations": [
                    "514:7:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1109,
                  "src": "514:7:5"
                },
                "referencedDeclaration": 1109,
                "src": "514:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Network_$1109",
                  "typeString": "enum Network"
                }
              },
              "id": 1151,
              "nodeType": "ArrayTypeName",
              "src": "514:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_enum$_Network_$1109_$dyn_storage_ptr",
                "typeString": "enum Network[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1155,
            "nodeType": "VariableDeclaration",
            "src": "538:17:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "utils",
            "nameLocation": "550:5:5",
            "scope": 1322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SphinxUtils_$1099",
              "typeString": "contract SphinxUtils"
            },
            "typeName": {
              "id": 1154,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1153,
                "name": "SphinxUtils",
                "nameLocations": [
                  "538:11:5"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1099,
                "src": "538:11:5"
              },
              "referencedDeclaration": 1099,
              "src": "538:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SphinxUtils_$1099",
                "typeString": "contract SphinxUtils"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1158,
            "nodeType": "VariableDeclaration",
            "src": "562:68:5",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "580:5:5",
            "scope": 1322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1156,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "562:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839666435384266304632453631323546666230434246613941453931383933446263314435633531",
              "id": 1157,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "588:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x9fd58Bf0F2E6125Ffb0CBFa9AE91893Dbc1D5c51"
            },
            "visibility": "internal"
          },
          {
            "id": 1163,
            "nodeType": "VariableDeclaration",
            "src": "637:33:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "chainIds",
            "nameLocation": "662:8:5",
            "scope": 1322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Network_$1109_$_t_uint256_$",
              "typeString": "mapping(enum Network => uint256)"
            },
            "typeName": {
              "id": 1162,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1160,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1159,
                  "name": "Network",
                  "nameLocations": [
                    "645:7:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1109,
                  "src": "645:7:5"
                },
                "referencedDeclaration": 1109,
                "src": "645:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Network_$1109",
                  "typeString": "enum Network"
                }
              },
              "nodeType": "Mapping",
              "src": "637:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Network_$1109_$_t_uint256_$",
                "typeString": "mapping(enum Network => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1161,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "656:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1255,
            "nodeType": "FunctionDefinition",
            "src": "677:551:5",
            "nodes": [],
            "body": {
              "id": 1254,
              "nodeType": "Block",
              "src": "692:536:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1166,
                      "name": "utils",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "702:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SphinxUtils_$1099",
                        "typeString": "contract SphinxUtils"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "710:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SphinxUtils_$1099_$",
                          "typeString": "function () returns (contract SphinxUtils)"
                        },
                        "typeName": {
                          "id": 1168,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1167,
                            "name": "SphinxUtils",
                            "nameLocations": [
                              "714:11:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1099,
                            "src": "714:11:5"
                          },
                          "referencedDeclaration": 1099,
                          "src": "714:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SphinxUtils_$1099",
                            "typeString": "contract SphinxUtils"
                          }
                        }
                      },
                      "id": 1170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "710:17:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SphinxUtils_$1099",
                        "typeString": "contract SphinxUtils"
                      }
                    },
                    "src": "702:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SphinxUtils_$1099",
                      "typeString": "contract SphinxUtils"
                    }
                  },
                  "id": 1172,
                  "nodeType": "ExpressionStatement",
                  "src": "702:25:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1176,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "749:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1173,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "737:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "744:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "737:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1178,
                  "nodeType": "ExpressionStatement",
                  "src": "737:18:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1182,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "780:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1179,
                        "name": "proposers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1146,
                        "src": "765:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "775:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "765:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "765:21:5"
                },
                {
                  "expression": {
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1185,
                      "name": "threshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "796:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "808:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "796:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1188,
                  "nodeType": "ExpressionStatement",
                  "src": "796:13:5"
                },
                {
                  "expression": {
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1189,
                      "name": "managerVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "819:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "76302e322e33",
                      "id": 1190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "836:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_bdea14948b46020d31b2d945600ee8f5808931c728d9e0a17bf35aedfb8c4607",
                        "typeString": "literal_string \"v0.2.3\""
                      },
                      "value": "v0.2.3"
                    },
                    "src": "819:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "819:25:5"
                },
                {
                  "expression": {
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1193,
                      "name": "networks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1152,
                      "src": "854:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_Network_$1109_$dyn_storage",
                        "typeString": "enum Network[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1196,
                            "name": "Network",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "880:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                              "typeString": "type(enum Network)"
                            }
                          },
                          "id": 1197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "888:8:5",
                          "memberName": "ethereum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1102,
                          "src": "880:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Network_$1109",
                            "typeString": "enum Network"
                          }
                        },
                        {
                          "expression": {
                            "id": 1198,
                            "name": "Network",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "898:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                              "typeString": "type(enum Network)"
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "906:8:5",
                          "memberName": "optimism",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1103,
                          "src": "898:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Network_$1109",
                            "typeString": "enum Network"
                          }
                        },
                        {
                          "expression": {
                            "id": 1200,
                            "name": "Network",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "916:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                              "typeString": "type(enum Network)"
                            }
                          },
                          "id": 1201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "924:8:5",
                          "memberName": "arbitrum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1104,
                          "src": "916:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Network_$1109",
                            "typeString": "enum Network"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Network_$1109",
                            "typeString": "enum Network"
                          },
                          {
                            "typeIdentifier": "t_enum$_Network_$1109",
                            "typeString": "enum Network"
                          },
                          {
                            "typeIdentifier": "t_enum$_Network_$1109",
                            "typeString": "enum Network"
                          }
                        ],
                        "expression": {
                          "id": 1194,
                          "name": "utils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1155,
                          "src": "865:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SphinxUtils_$1099",
                            "typeString": "contract SphinxUtils"
                          }
                        },
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "871:8:5",
                        "memberName": "networks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 297,
                        "src": "865:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_enum$_Network_$1109_$_t_enum$_Network_$1109_$_t_enum$_Network_$1109_$returns$_t_array$_t_enum$_Network_$1109_$dyn_memory_ptr_$",
                          "typeString": "function (enum Network,enum Network,enum Network) pure external returns (enum Network[] memory)"
                        }
                      },
                      "id": 1202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "865:68:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_Network_$1109_$dyn_memory_ptr",
                        "typeString": "enum Network[] memory"
                      }
                    },
                    "src": "854:79:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_Network_$1109_$dyn_storage",
                      "typeString": "enum Network[] storage ref"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "854:79:5"
                },
                {
                  "expression": {
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1205,
                        "name": "chainIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "944:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Network_$1109_$_t_uint256_$",
                          "typeString": "mapping(enum Network => uint256)"
                        }
                      },
                      "id": 1208,
                      "indexExpression": {
                        "expression": {
                          "id": 1206,
                          "name": "Network",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "953:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                            "typeString": "type(enum Network)"
                          }
                        },
                        "id": 1207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "961:8:5",
                        "memberName": "ethereum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1102,
                        "src": "953:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Network_$1109",
                          "typeString": "enum Network"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "944:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "973:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "944:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1211,
                  "nodeType": "ExpressionStatement",
                  "src": "944:30:5"
                },
                {
                  "expression": {
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1212,
                        "name": "chainIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "984:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Network_$1109_$_t_uint256_$",
                          "typeString": "mapping(enum Network => uint256)"
                        }
                      },
                      "id": 1215,
                      "indexExpression": {
                        "expression": {
                          "id": 1213,
                          "name": "Network",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "993:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                            "typeString": "type(enum Network)"
                          }
                        },
                        "id": 1214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1001:3:5",
                        "memberName": "bsc",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1106,
                        "src": "993:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Network_$1109",
                          "typeString": "enum Network"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "984:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3536",
                      "id": 1216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1008:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_56_by_1",
                        "typeString": "int_const 56"
                      },
                      "value": "56"
                    },
                    "src": "984:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "984:26:5"
                },
                {
                  "expression": {
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1219,
                        "name": "chainIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "1020:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Network_$1109_$_t_uint256_$",
                          "typeString": "mapping(enum Network => uint256)"
                        }
                      },
                      "id": 1222,
                      "indexExpression": {
                        "expression": {
                          "id": 1220,
                          "name": "Network",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "1029:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                            "typeString": "type(enum Network)"
                          }
                        },
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1037:9:5",
                        "memberName": "avalanche",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1107,
                        "src": "1029:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Network_$1109",
                          "typeString": "enum Network"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1020:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3433313134",
                      "id": 1223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1050:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_43114_by_1",
                        "typeString": "int_const 43114"
                      },
                      "value": "43114"
                    },
                    "src": "1020:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:35:5"
                },
                {
                  "expression": {
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1226,
                        "name": "chainIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "1065:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Network_$1109_$_t_uint256_$",
                          "typeString": "mapping(enum Network => uint256)"
                        }
                      },
                      "id": 1229,
                      "indexExpression": {
                        "expression": {
                          "id": 1227,
                          "name": "Network",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "1074:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                            "typeString": "type(enum Network)"
                          }
                        },
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1082:7:5",
                        "memberName": "polygon",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1105,
                        "src": "1074:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Network_$1109",
                          "typeString": "enum Network"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1065:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313337",
                      "id": 1230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1093:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_137_by_1",
                        "typeString": "int_const 137"
                      },
                      "value": "137"
                    },
                    "src": "1065:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:31:5"
                },
                {
                  "expression": {
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1233,
                        "name": "chainIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "1106:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Network_$1109_$_t_uint256_$",
                          "typeString": "mapping(enum Network => uint256)"
                        }
                      },
                      "id": 1236,
                      "indexExpression": {
                        "expression": {
                          "id": 1234,
                          "name": "Network",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "1115:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                            "typeString": "type(enum Network)"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1123:8:5",
                        "memberName": "arbitrum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1104,
                        "src": "1115:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Network_$1109",
                          "typeString": "enum Network"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1106:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3432313631",
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1135:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_42161_by_1",
                        "typeString": "int_const 42161"
                      },
                      "value": "42161"
                    },
                    "src": "1106:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:34:5"
                },
                {
                  "expression": {
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1240,
                        "name": "chainIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "1150:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Network_$1109_$_t_uint256_$",
                          "typeString": "mapping(enum Network => uint256)"
                        }
                      },
                      "id": 1243,
                      "indexExpression": {
                        "expression": {
                          "id": 1241,
                          "name": "Network",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "1159:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                            "typeString": "type(enum Network)"
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1167:8:5",
                        "memberName": "optimism",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1103,
                        "src": "1159:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Network_$1109",
                          "typeString": "enum Network"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1150:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1179:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "1150:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "1150:31:5"
                },
                {
                  "expression": {
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1247,
                        "name": "chainIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "1191:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Network_$1109_$_t_uint256_$",
                          "typeString": "mapping(enum Network => uint256)"
                        }
                      },
                      "id": 1250,
                      "indexExpression": {
                        "expression": {
                          "id": 1248,
                          "name": "Network",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "1200:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                            "typeString": "type(enum Network)"
                          }
                        },
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1208:6:5",
                        "memberName": "fantom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1108,
                        "src": "1200:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Network_$1109",
                          "typeString": "enum Network"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1191:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "323530",
                      "id": 1251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1218:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_250_by_1",
                        "typeString": "int_const 250"
                      },
                      "value": "250"
                    },
                    "src": "1191:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:30:5"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:2:5"
            },
            "returnParameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "692:0:5"
            },
            "scope": 1322,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1262,
            "nodeType": "FunctionDefinition",
            "src": "1234:49:5",
            "nodes": [],
            "body": {
              "id": 1261,
              "nodeType": "Block",
              "src": "1275:8:5",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "b17a98fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setup",
            "nameLocation": "1243:5:5",
            "parameters": {
              "id": 1259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1258,
                  "mutability": "mutable",
                  "name": "_network",
                  "nameLocation": "1258:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "1250:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Network_$1109",
                    "typeString": "enum Network"
                  },
                  "typeName": {
                    "id": 1257,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1256,
                      "name": "Network",
                      "nameLocations": [
                        "1250:7:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1109,
                      "src": "1250:7:5"
                    },
                    "referencedDeclaration": 1109,
                    "src": "1250:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Network_$1109",
                      "typeString": "enum Network"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1249:18:5"
            },
            "returnParameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1275:0:5"
            },
            "scope": 1322,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1321,
            "nodeType": "FunctionDefinition",
            "src": "1289:550:5",
            "nodes": [],
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "1330:509:5",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1269,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1349:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1320,
                      "src": "1341:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1268,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1341:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1274,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 1272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1364:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1356:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 1270,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1356:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1356:10:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1341:25:5"
                },
                {
                  "assignments": [
                    1277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1277,
                      "mutability": "mutable",
                      "name": "client",
                      "nameLocation": "1394:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1320,
                      "src": "1381:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SphinxClient_$185",
                        "typeString": "contract SphinxClient"
                      },
                      "typeName": {
                        "id": 1276,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1275,
                          "name": "SphinxClient",
                          "nameLocations": [
                            "1381:12:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 185,
                          "src": "1381:12:5"
                        },
                        "referencedDeclaration": 185,
                        "src": "1381:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SphinxClient_$185",
                          "typeString": "contract SphinxClient"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1284,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1281,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "1444:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "id": 1282,
                        "name": "threshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1143,
                        "src": "1476:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1403:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_contract$_SphinxClient_$185_$",
                        "typeString": "function (address[] memory,uint256) returns (contract SphinxClient)"
                      },
                      "typeName": {
                        "id": 1279,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1278,
                          "name": "SphinxClient",
                          "nameLocations": [
                            "1407:12:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 185,
                          "src": "1407:12:5"
                        },
                        "referencedDeclaration": 185,
                        "src": "1407:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SphinxClient_$185",
                          "typeString": "contract SphinxClient"
                        }
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1435:7:5",
                      "1464:10:5"
                    ],
                    "names": [
                      "_owners",
                      "_threshold"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1403:93:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SphinxClient_$185",
                      "typeString": "contract SphinxClient"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1381:115:5"
                },
                {
                  "assignments": [
                    1289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1289,
                      "mutability": "mutable",
                      "name": "setOfNetworks",
                      "nameLocation": "1524:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1320,
                      "src": "1507:30:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_Network_$1109_$dyn_memory_ptr",
                        "typeString": "enum Network[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1287,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1286,
                            "name": "Network",
                            "nameLocations": [
                              "1507:7:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1109,
                            "src": "1507:7:5"
                          },
                          "referencedDeclaration": 1109,
                          "src": "1507:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Network_$1109",
                            "typeString": "enum Network"
                          }
                        },
                        "id": 1288,
                        "nodeType": "ArrayTypeName",
                        "src": "1507:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_Network_$1109_$dyn_storage_ptr",
                          "typeString": "enum Network[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1295,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1292,
                          "name": "Network",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "1555:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Network_$1109_$",
                            "typeString": "type(enum Network)"
                          }
                        },
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1563:8:5",
                        "memberName": "ethereum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1102,
                        "src": "1555:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Network_$1109",
                          "typeString": "enum Network"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Network_$1109",
                          "typeString": "enum Network"
                        }
                      ],
                      "expression": {
                        "id": 1290,
                        "name": "utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1155,
                        "src": "1540:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SphinxUtils_$1099",
                          "typeString": "contract SphinxUtils"
                        }
                      },
                      "id": 1291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1546:8:5",
                      "memberName": "networks",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 218,
                      "src": "1540:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_enum$_Network_$1109_$returns$_t_array$_t_enum$_Network_$1109_$dyn_memory_ptr_$",
                        "typeString": "function (enum Network) pure external returns (enum Network[] memory)"
                      }
                    },
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1540:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_Network_$1109_$dyn_memory_ptr",
                      "typeString": "enum Network[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1507:65:5"
                },
                {
                  "assignments": [
                    1298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1298,
                      "mutability": "mutable",
                      "name": "helloSphinx",
                      "nameLocation": "1594:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1320,
                      "src": "1582:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HelloSphinx_$81",
                        "typeString": "contract HelloSphinx"
                      },
                      "typeName": {
                        "id": 1297,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1296,
                          "name": "HelloSphinx",
                          "nameLocations": [
                            "1582:11:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 81,
                          "src": "1582:11:5"
                        },
                        "referencedDeclaration": 81,
                        "src": "1582:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HelloSphinx_$81",
                          "typeString": "contract HelloSphinx"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1314,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1301,
                          "name": "chainIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1163,
                          "src": "1646:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Network_$1109_$_t_uint256_$",
                            "typeString": "mapping(enum Network => uint256)"
                          }
                        },
                        "id": 1303,
                        "indexExpression": {
                          "id": 1302,
                          "name": "_network",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1265,
                          "src": "1655:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Network_$1109",
                            "typeString": "enum Network"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1646:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1687:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1679:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1304,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1679:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1679:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1309,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1269,
                            "src": "1726:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1310,
                            "name": "setOfNetworks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "1742:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_Network_$1109_$dyn_memory_ptr",
                              "typeString": "enum Network[] memory"
                            }
                          },
                          {
                            "hexValue": "48656c6c6f537068696e78",
                            "id": 1311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1772:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_61990c86bc70ca1ec97fc2b19aa980a758cf771ce33fd27e714f3d250e401895",
                              "typeString": "literal_string \"HelloSphinx\""
                            },
                            "value": "HelloSphinx"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_enum$_Network_$1109_$dyn_memory_ptr",
                              "typeString": "enum Network[] memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_61990c86bc70ca1ec97fc2b19aa980a758cf771ce33fd27e714f3d250e401895",
                              "typeString": "literal_string \"HelloSphinx\""
                            }
                          ],
                          "id": 1308,
                          "name": "DeployOptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1118,
                          "src": "1704:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_DeployOptions_$1118_storage_ptr_$",
                            "typeString": "type(struct DeployOptions storage pointer)"
                          }
                        },
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "1720:4:5",
                          "1732:8:5",
                          "1757:13:5"
                        ],
                        "names": [
                          "salt",
                          "networks",
                          "referenceName"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1704:84:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployOptions_$1118_memory_ptr",
                          "typeString": "struct DeployOptions memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_DeployOptions_$1118_memory_ptr",
                          "typeString": "struct DeployOptions memory"
                        }
                      ],
                      "expression": {
                        "id": 1299,
                        "name": "client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "1608:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SphinxClient_$185",
                          "typeString": "contract SphinxClient"
                        }
                      },
                      "id": 1300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1615:17:5",
                      "memberName": "DeployHelloSphinx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157,
                      "src": "1608:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_struct$_DeployOptions_$1118_memory_ptr_$returns$_t_contract$_HelloSphinx_$81_$",
                        "typeString": "function (uint256,address,struct DeployOptions memory) external returns (contract HelloSphinx)"
                      }
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:190:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HelloSphinx_$81",
                      "typeString": "contract HelloSphinx"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1582:216:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1315,
                        "name": "helloSphinx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "1809:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HelloSphinx_$81",
                          "typeString": "contract HelloSphinx"
                        }
                      },
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1821:9:5",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "1809:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1319,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:23:5"
                }
              ]
            },
            "functionSelector": "506ef1f0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nameLocation": "1298:6:5",
            "parameters": {
              "id": 1266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1265,
                  "mutability": "mutable",
                  "name": "_network",
                  "nameLocation": "1313:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1305:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Network_$1109",
                    "typeString": "enum Network"
                  },
                  "typeName": {
                    "id": 1264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1263,
                      "name": "Network",
                      "nameLocations": [
                        "1305:7:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1109,
                      "src": "1305:7:5"
                    },
                    "referencedDeclaration": 1109,
                    "src": "1305:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Network_$1109",
                      "typeString": "enum Network"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1304:18:5"
            },
            "returnParameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:0:5"
            },
            "scope": 1322,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1137,
              "name": "SphinxConfig",
              "nameLocations": [
                "401:12:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 188,
              "src": "401:12:5"
            },
            "id": 1138,
            "nodeType": "InheritanceSpecifier",
            "src": "401:12:5"
          }
        ],
        "canonicalName": "HelloSphinxConfig",
        "contractDependencies": [
          185,
          1099
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1322,
          188
        ],
        "name": "HelloSphinxConfig",
        "nameLocation": "380:17:5",
        "scope": 1323,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 5
}